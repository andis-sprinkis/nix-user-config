set -g history-limit 1000000
set -g mouse on
set -g status-keys vi
setw -g mode-keys vi
set -g status-position top
set -s escape-time 0
set -g set-titles on
set -g base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g renumber-windows on
set -g prefix-timeout 5000
set -g display-panes-time 5000
set -g display-time 5000
set -g monitor-activity off
set -g visual-activity off
set -g focus-events on
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',xterm-256color:Tc'
set -g status off
set -g default-command "$SHELL"
set -g aggressive-resize on

# Session, window, pane status string
%hidden _status_pane_mode="#{?pane_in_mode,[#{pane_mode}] ,}"
%hidden _status_session="#{session_name}#{?session_marked,M,}"
%hidden _status_window="#{active_window_index}#{?window_active,,}#{?window_activity_flag,##,}#{?window_bell_flag,!,}#{?window_last_flag,-,}#{?window_marked_flag,M,}#{?window_silence_flag,~,}#{?window_zoomed_flag,Z,}"
%hidden _status_pane="#{pane_index}#{?pane_marked,M,}"
%hidden _status_pane_title="#{user}@#{host} - #{pane_title}"

# Title string
set -g set-titles-string "${_status_pane_mode}[${_status_session}:${_status_window}:${_status_pane}] ${_status_pane_title}"

# Changing the default prefix key
set -g prefix C-Space
unbind C-b
bind -N "Send prefix (user)" C-Space send-prefix

# Reloading the tmux config file

unbind r # Default: Redraw the current client

bind -N "Reload tmux.conf (user)" r {
  source-file ~/.config/tmux/tmux.conf
  display 'tmux.conf reloaded'
}

# Toggling status

unbind t # Default: Show a clock
bind -N "Toggle status line (user)" t {
  set status
}

bind -N "Copy selection (user)" -T copy-mode-vi y {
  send -X copy-selection -x
}

bind -N "Select pane and clear selection (user)" -T copy-mode-vi MouseDown1Pane {
  select-pane
  send -X clear-selection
}

# Staying in the copy mode after mouse events
unbind -T copy-mode-vi MouseDragEnd1Pane
unbind -T copy-mode-vi DoubleClick1Pane
unbind -T copy-mode-vi TripleClick1Pane

# Opening pane copy in editor split
bind -N "Open pane copy in editor split (user)" e run-shell "$HOME/.local/share/tmux/editor_pane_copy"

# Pane border
set -g pane-border-style 'bg=default fg=brightblack'
set -g pane-active-border-style 'bg=default fg=cyan'
set -g pane-border-status off
set -g pane-border-lines single
set -g pane-border-format "#[align=left]#[fg=brightblack]#{?pane_active,#[fg=cyan],#[fg=brightblack]}#{=/#{e|-:#{pane_width},18}/.. : ${_status_pane_mode}${_status_pane_title}} #[align=right] ${_status_session}:${_status_window}:${_status_pane} "

# Status bar
set -g status-bg black
set -g status-fg darkgray

# Status left
set -g status-left "[${_status_session}:${_status_window}:${_status_pane}] "
set -g status-left-length 12

# Window status bar
set -g window-status-current-style 'fg=white'
set -g window-status-bell-style 'fg=yellow'

# Status right
set -g status-right "${_status_pane_title}"
set -g status-right-length 60

# Hooks
set-hook -g @toggle-status {
  if -b "[ \#{session_windows} -eq 1 ]" {
    set status off
  } {
    set status on
  }
}

set-hook -g @toggle-pane-border-status {
  if -b "[ \#{window_panes} -eq 1 ]" {
    set pane-border-status off
  } {
    set pane-border-status top
  }
}

set-hook -g after-new-session {
  set-hook -R @toggle-status
  set-hook -R @toggle-pane-border-status
}

set-hook -g after-new-window {
  set-hook -R @toggle-status
  set-hook -R @toggle-pane-border-status
}

set-hook -g after-kill-pane {
  set-hook -R @toggle-status
  set-hook -R @toggle-pane-border-status
}

set-hook -g after-split-window {
  set-hook -R @toggle-status
  set-hook -R @toggle-pane-border-status
}

set-hook -g pane-exited {
  set-hook -R @toggle-status
  set-hook -R @toggle-pane-border-status
}
