set -g history-limit 1000000
set -g mouse on
set -g status-keys vi
setw -g mode-keys vi
set -g status-position top
set -s escape-time 0
set -g set-titles on
set -g base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g renumber-windows on
set -g prefix-timeout 1000
set -g display-panes-time 5000
set -g display-time 5000
set -g monitor-activity off
set -g visual-activity off
set -g focus-events on
set -g default-terminal "xterm"
set -ga terminal-overrides ',xterm-256color:Tc'
set -g status off

# Session, window, pane status string
_tmux_status_pane_mode="#{?pane_in_mode,[#{pane_mode}] ,}"
_tmux_status_session="#{session_name}#{?session_marked,M,}"
_tmux_status_window="#{active_window_index}#{?window_active,,}#{?window_activity_flag,##,}#{?window_bell_flag,!,}#{?window_last_flag,-,}#{?window_marked_flag,M,}#{?window_silence_flag,~,}#{?window_zoomed_flag,Z,}"
_tmux_status_pane="#{pane_index}#{?pane_marked,M,}"
_tmux_status_pane_title="#{user}@#{host} - #{pane_title}"

# Title string
set -g set-titles-string "${_tmux_status_pane_mode}[${_tmux_status_session}:${_tmux_status_window}:${_tmux_status_pane}] ${_tmux_status_pane_title}"

# Changing the default prefix key
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Reloading the tmux config file
unbind r

bind r {
  source-file ~/.config/tmux/tmux.conf
  display 'tmux.conf reloaded'
}

# Toggling status
unbind t
bind t set status

# Splitting panes
unbind %   # Default split vertically
unbind '"' # Default split horizontally
unbind v
unbind o
bind v splitw -v -c "#{pane_current_path}"
bind o splitw -h -c "#{pane_current_path}"

# Navigating panes
unbind M-h
unbind M-j
unbind M-k
unbind M-l
bind -n M-h selectp -L
bind -n M-j selectp -D
bind -n M-k selectp -U
bind -n M-l selectp -R

# Resizing panes
unbind M-H
unbind M-J
unbind M-K
unbind M-L
bind -n M-K resizep -U 3
bind -n M-J resizep -D 3
bind -n M-H resizep -L 5
bind -n M-L resizep -R 5

# The copy mode keys
unbind -T copy-mode-vi 'v'
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'C-v' send -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection -x
bind -T copy-mode-vi MouseDown1Pane selectp \; send -X clear-selection

# Staying in the copy mode after mouse events
unbind -T copy-mode-vi MouseDragEnd1Pane
unbind -T copy-mode-vi DoubleClick1Pane
unbind -T copy-mode-vi TripleClick1Pane

# Opening pane copy in editor split
bind e run-shell "$HOME/.local/share/tmux/editor_pane_copy"

# Pane border
set -g pane-border-style 'bg=default fg=brightblack'
set -g pane-active-border-style 'bg=default fg=brightblack'
set -g pane-border-status off
set -g pane-border-lines single
set -g pane-border-format "#[align=centre]#{?pane_active,#[fg=white],#[fg=brightblack]}#{=/#{e|-:#{pane_width},8}/..: ${_tmux_status_pane_mode}[${_tmux_status_session}:${_tmux_status_window}:${_tmux_status_pane}] ${_tmux_status_pane_title} }"

# Status bar
set -g status-bg black
set -g status-fg darkgray

# Status left
set -g status-left "[${_tmux_status_session}:${_tmux_status_window}:${_tmux_status_pane}] "

# Window status bar
set -g window-status-current-style 'fg=white'
set -g window-status-bell-style 'fg=yellow'

# Status right
set -g status-right "${_tmux_status_pane_title}"
set -g status-right-length 60

# Hooks
set-hook -g after-new-session {
  if -b "[ \#{window_panes} -eq 1 ]" {
    set pane-border-status off
  }

  if -b "[ \#{session_windows} -eq 1 ]" {
    set status off
  } {
    set status on
  }
}

set-hook -g after-new-window {
  if -b "[ \#{window_panes} -eq 1 ]" {
    set pane-border-status off
  }

  if -b "[ \#{session_windows} -eq 1 ]" {
    set status off
  } {
    set status on
  }
}

set-hook -g after-kill-pane {
  if -b "[ \#{window_panes} -eq 1 ]" {
    set pane-border-status off
  }

  if -b "[ \#{session_windows} -eq 1 ]" {
    set status off
  } {
    set status on
  }
}

set-hook -g pane-exited {
  if -b "[ \#{window_panes} -eq 1 ]" {
    set pane-border-status off
  }

  if -b "[ \#{session_windows} -eq 1 ]" {
    set status off
  } {
    set status on
  }
}

set-hook -g after-split-window {
  if -b "[ \#{window_panes} -gt 1 ]" {
    set pane-border-status top
  }

  if -b "[ \#{session_windows} -eq 1 ]" {
    set status off
  } {
    set status on
  }
}
