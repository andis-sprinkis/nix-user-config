# vim: ft=cfg

[global]
  follow = mouse

  ### Geometry ###

  # The width of the window, excluding the frame.
  # dynamic width from 0 to 300 - width = (0, 300)
  width = 480

  # The height of a single notification, excluding the frame.
  # dynamic height from 0 to 300
  height = (0, 300)
  # constant height of 300
  # height = 300

  # Position the notification in the top right corner
  # origin = top-right
  origin = bottom-right

  # Offset from the origin
  offset = (8,8)

  # Maximum number of notification (0 means no limit)
  notification_limit = 20

  ### Progress bar ###

  # Turn on the progress bar. It appears when a progress hint is passed with
  # for example dunstify -h int:value:12
  progress_bar = true

  # Set the progress bar height. This includes the frame, so make sure
  # it's at least twice as big as the frame width.
  progress_bar_height = 10

  # Set the frame width of the progress bar
  progress_bar_frame_width = 1

  # Set the minimum width for the progress bar
  progress_bar_min_width = 150

  # Set the maximum width for the progress bar
  progress_bar_max_width = 300

  # Corner radius for the progress bar. 0 disables rounded corners.
  progress_bar_corner_radius = 0

  # Define which corners to round when drawing the progress bar. If progress_bar_corner_radius
  # is set to 0 this option will be ignored.
  progress_bar_corners = all

  # Show how many messages are currently hidden (because of
  # notification_limit).
  indicate_hidden = yes

  separator_height = 2
  padding = 14
  horizontal_padding = 18
  frame_width = 2
  gap_size = 0

  # Sort type.
  # possible values are:
  #  * id: sort by id
  #  * urgency_ascending: sort by urgency (low then normal then critical)
  #  * urgency_descending: sort by urgency (critical then normal then low)
  #  * update: sort by update (most recent always at the top)
  sort = yes

  # Don't remove messages, if the user is idle (no mouse or keyboard input)
  # for longer than idle_threshold seconds.
  # Set to 0 to disable.
  # A client can set the 'transient' hint to bypass this. See the rules
  # section for how to disable this if necessary
  idle_threshold = 120

  ### Text ###

  font = sans-serif regular 13

  # The spacing between lines.  If the height is smaller than the
  # font height, it will get raised to the font height.
  # line_height = 0
  line_height = 2

  # Possible values are:
  # full: Allow a small subset of html markup in notifications:
  #      <b>bold</b>
  #      <i>italic</i>
  #      <s>strikethrough</s>
  #      <u>underline</u>
  #
  #      For a complete reference see
  #      <https://docs.gtk.org/Pango/pango_markup.html>.
  #
  # strip: This setting is provided for compatibility with some broken
  #      clients that send markup even though it's not enabled on the
  #      server. Dunst will try to strip the markup but the parsing is
  #      simplistic so using this option outside of matching rules for
  #      specific applications *IS GREATLY DISCOURAGED*.
  #
  # no:    Disable markup parsing, incoming notifications will be treated as
  #      plain text. Dunst will not advertise that it has the body-markup
  #      capability if this is set as a global setting.
  #
  # It's important to note that markup inside the format option will be parsed
  # regardless of what this is set to.
  markup = full

  # The format of the message.  Possible variables are:
  #   %a  appname
  #   %s  summary
  #   %b  body
  #   %i  iconname (including its path)
  #   %I  iconname (without its path)
  #   %p  progress value if set ([  0%] to [100%]) or nothing
  #   %n  progress value if set without any extra characters
  #   %%  Literal %
  # Markup is allowed
  # format = "<b>%s</b>\n%b"
  format = "<b>%a</b>\n%s\n%b"

  # Show age of message if message is older than show_age_threshold
  # seconds.
  # Set to -1 to disable.
  show_age_threshold = 60

  # Specify where to make an ellipsis in long lines.
  # Possible values are "start", "middle" and "end".
  ellipsize = middle

  # Hide the count of stacked notifications with the same content
  hide_duplicate_count = false

  # Display indicators for URLs (U) and actions (A).
  show_indicators = yes

  ### Icons ###
  icon_position = off

  ### History ###

  # Should a notification popped up from history be sticky or timeout
  # as if it would normally do.
  sticky_history = yes

  # Maximum amount of notifications kept in history
  history_length = 20

  ### Misc/Advanced ###

  # dmenu path.
  dmenu = menu_desktop -p dunst:

  # Browser for opening urls in context menu.
  browser = /usr/bin/xdg-open

  # Always run rule-defined scripts, even if the notification is suppressed
  always_run_script = true

  # Define the title of the windows spawned by dunst (X11 only)
  title = Dunst

  # Define the class of the windows spawned by dunst (X11 only)
  class = Dunst

  # Define the corner radius of the notification window
  # in pixel size. If the radius is 0, you have no rounded
  # corners.
  # The radius will be automatically lowered if it exceeds half of the
  # notification height to avoid clipping text and/or icons.
  corner_radius = 0

  # Define which corners to round when drawing the window. If the corner radius
  # is set to 0 this option will be ignored.
  #
  # Comma-separated list of the corners. The accepted corner values are bottom-right,
  # bottom-left, top-right, top-left, top, bottom, left, right or all.
  corners = all

  # Ignore the dbus closeNotification message.
  # Useful to enforce the timeout set by dunst configuration. Without this
  # parameter, an application may close the notification sent before the
  # user defined timeout.
  ignore_dbusclose = false

  ### Wayland ###
  # These settings are Wayland-specific. They have no effect when using X11

  # Uncomment this if you want to let notifications appear under fullscreen
  # applications (default: overlay)
  # layer = top

  ### mouse

  # Defines list of actions for each mouse event
  # Possible values are:
  # * none: Don't do anything.
  # * do_action: Invoke the action determined by the action_name rule. If there is no
  #            such action, open the context menu.
  # * open_url: If the notification has exactly one url, open it. If there are multiple
  #           ones, open the context menu.
  # * close_current: Close current notification.
  # * close_all: Close all notifications.
  # * context: Open context menu for the notification.
  # * context_all: Open context menu for all notifications.
  # These values can be strung together for each mouse event, and
  # will be executed in sequence.
  mouse_left_click = do_action, close_current
  mouse_middle_click = close_current
  mouse_right_click = close_all

[global]
  frame_color = "#808080d8"
  separator_color = frame

[urgency_low]
  background = "#1f1f1fd0"
  foreground = "#d4d4d4"
  frame_color = "#808080d8"

[urgency_normal]
  background = "#1f1f1fd0"
  foreground = "#d4d4d4"
  frame_color = "#608b4ed8"

[urgency_critical]
  background = "#1f1f1fd0"
  foreground = "#d4d4d4"
  frame_color = "#f44747d8"

[urgency_low]
  timeout = 7

[urgency_normal]
  timeout = 7
  override_pause_level = 30

[urgency_critical]
  timeout = 0
  override_pause_level = 60

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
  per_monitor_dpi = true

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#  appname (discouraged, see desktop_entry)
#  body
#  category
#  desktop_entry
#  icon
#  match_transient
#  msg_urgency
#  stack_tag
#  summary
#
# and you can override the
#  background
#  foreground
#  format
#  frame_color
#  fullscreen
#  new_icon
#  set_stack_tag
#  set_transient
#  set_category
#  timeout
#  urgency
#  icon_position
#  skip_display
#  history_ignore
#  action_name
#  word_wrap
#  ellipsize
#  alignment
#  hide_text
#  override_pause_level
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# You can also allow a notification to appear even when paused. Notification will appear whenever notification's override_pause_level >= dunst's paused level.
# This can be used to set partial pause modes, where more urgent notifications get through, but less urgent stay paused. To do that, you can override the following in the rules:
# override_pause_level = X

# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#  match_transient = yes
#  set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#  match_transient = yes
#  history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#      If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#         withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#  fullscreen = delay
#[fullscreen_show_critical]
#  msg_urgency = critical
#  fullscreen = show

#[espeak]
#  summary = "*"
#  script = dunst_espeak.sh

#[script-test]
#  summary = "*script*"
#  script = dunst_test.sh

#[ignore]
#  # This notification will not be displayed
#  summary = "foobar"
#  skip_display = true

#[history-ignore]
#  # This notification will not be saved in history
#  summary = "foobar"
#  history_ignore = yes

#[skip-display]
#  # This notification will not be displayed, but will be included in the history
#  summary = "foobar"
#  skip_display = yes

#[signed_on]
#  appname = Pidgin
#  summary = "*signed on*"
#  urgency = low
#
#[signed_off]
#  appname = Pidgin
#  summary = *signed off*
#  urgency = low
#
#[says]
#  appname = Pidgin
#  summary = *says*
#  urgency = critical
#
#[twitter]
#  appname = Pidgin
#  summary = *twitter.com*
#  urgency = normal
#
#[stack-volumes]
#  appname = "some_volume_notifiers"
#  set_stack_tag = "volume"
#
