#!/usr/bin/env sh
set -eu

direction="${1:-""}"

if [ -z "$direction" ]; then
  exit "1"
fi

# Window manaager data

out_rect="$(  i3-msg -t get_outputs | jq -r ".[] | select(.focused == true).rect | .x,.y,.width,.height")"
ws_rect="$(i3-msg -t get_workspaces | jq -r ".[] | select(.focused == true).rect | .x,.y,.width,.height")"
win="$(          i3-msg -t get_tree | jq -r ".. | select(.type?) | select(.focused == true) | .type,.fullscreen_mode,.rect.x,.rect.y,.rect.width,.rect.height,.window_rect.x,.window_rect.y,.window_rect.width,.window_rect.height,.deco_rect.x,.deco_rect.y,.deco_rect.width,.deco_rect.height,.geometry.x,.geometry.y,.geometry.width,.geometry.height")"

out_rect_x="$(       echo "$out_rect" | sed  "1q;d")"
out_rect_y="$(       echo "$out_rect" | sed  "2q;d")"
out_rect_width="$(   echo "$out_rect" | sed  "3q;d")"
out_rect_height="$(  echo "$out_rect" | sed  "4q;d")"

ws_rect_x="$(         echo "$ws_rect" | sed  "1q;d")"
ws_rect_y="$(         echo "$ws_rect" | sed  "2q;d")"
ws_rect_width="$(     echo "$ws_rect" | sed  "3q;d")" 
ws_rect_height="$(    echo "$ws_rect" | sed  "4q;d")"

win_type="$(              echo "$win" | sed  "1q;d")"
win_fullscreen_mode="$(   echo "$win" | sed  "2q;d")"
win_rect_x="$(            echo "$win" | sed  "3q;d")"
win_rect_y="$(            echo "$win" | sed  "4q;d")"
win_rect_width="$(        echo "$win" | sed  "5q;d")"
win_rect_height="$(       echo "$win" | sed  "6q;d")"
# win_window_rect_x="$(     echo "$win" | sed  "7q;d")"
# win_window_rect_y="$(     echo "$win" | sed  "8q;d")"
# win_window_rect_width="$( echo "$win" | sed  "9q;d")"
# win_window_rect_height="$(echo "$win" | sed "10q;d")"
# win_deco_rect_x="$(       echo "$win" | sed "11q;d")"
# win_deco_rect_y="$(       echo "$win" | sed "12q;d")"
# win_deco_rect_width="$(   echo "$win" | sed "13q;d")"
win_deco_rect_height="$(  echo "$win" | sed "14q;d")"

# Window properties

win_height() {
  c_win_height="${c_win_height:-"$((win_rect_height + win_deco_rect_height))"}"
  echo "$c_win_height"
}

win_width() {
  c_win_width="${c_win_width:-"$win_rect_width"}"
  echo "$c_win_width"
}

win_edge_left() {
  c_win_rect_x="${c_win_rect_x:-"$win_rect_x"}"
  echo "$c_win_rect_x"
}

win_edge_right() {
  c_win_edge_right="${c_win_edge_right:-"$(("${c_win_edge_left:-"$(win_edge_left)"}" + "${c_win_width:-"$(win_width)"}"))"}"
  echo "$c_win_edge_right"
}

win_edge_top() {
  c_win_edge_top="${c_win_edge_top:-"$((win_rect_y - win_deco_rect_height))"}"
  echo "$c_win_edge_top"
}

win_edge_bottom() {
  c_win_edge_bottom="${c_win_edge_bottom:-"$(("${c_win_edge_top:-"$(win_edge_top)"}" + "${c_win_height:-"$(win_height)"}"))"}"
  echo "$c_win_edge_bottom"
}

# Output properties

out_height() {
  echo "$out_rect_height"
}

out_width() {
  echo "$out_rect_width"
}

out_edge_left() {
  echo "$out_rect_x"
}

out_edge_right() {
  c_out_edge_right="${c_out_edge_right:-"$(($(out_edge_left) + $(out_width)))"}"
  echo "$c_out_edge_right"
}

out_edge_top() {
  echo "$out_rect_y"
}

out_edge_bottom() {
  c_out_edge_bottom="${c_out_edge_bottom:-"$(($(out_edge_top) + $(out_height)))"}"
  echo "$c_out_edge_bottom"
}

# Workspace properties

ws_height() {
  echo "$ws_rect_height"
}

ws_width() {
  echo "$ws_rect_width"
}

ws_edge_left() {
  echo "$ws_rect_x"
}

ws_edge_right() {
  c_ws_edge_right="${c_ws_edge_right:-"$(($(ws_edge_left) + $(ws_width)))"}"
  echo "$c_ws_edge_right"
}

ws_edge_top() {
  echo "$ws_rect_y"
}

ws_edge_bottom() {
  c_ws_edge_top="${c_ws_edge_top:-"$(($(ws_edge_top) + $(ws_height)))"}"
  echo "$c_ws_edge_top"
}

# Workspace-Window relation properties

win_edge_top_dist_ws_edge_top() {
  echo "$(($(win_edge_top) - $(ws_edge_top)))"
}

win_edge_bottom_dist_ws_edge_bottom() {
  echo "$(($(ws_edge_bottom) - $(win_edge_bottom)))"
}

win_edge_left_dist_ws_edge_left() {
  echo "$(($(win_edge_left) - $(ws_edge_left)))"
}

win_edge_right_dist_ws_edge_right() {
  echo "$(($(ws_edge_right) - $(win_edge_right)))"
}

# Window X and Y coordinate translations

win_x_moves_left() {
  echo "$(($(win_edge_left) - 128))"
}

win_x_moves_right() {
  echo "$(($(win_edge_left) + 128))"
}

win_y_moves_up() {
  echo "$(($(win_edge_top) - 128))"
}

win_y_moves_down() {
  echo "$(($(win_edge_top) + 128))"
}

win_x_snaps_left() {
  ws_edge_left
}

win_x_snaps_right() {
  echo "$(($(out_edge_right) - $(win_width)))"
}

win_y_snaps_top() {
  ws_edge_top
}

win_y_snaps_bottom() {
  echo "$(($(ws_edge_bottom) - $(win_height)))"
}

win_x_stays() {
  win_edge_left
}

win_y_stays() {
  win_edge_top
}

win_x_snaps_out_right() {
  ws_edge_right
}

win_x_snaps_out_left() {
  echo "$(($(out_edge_left) - $(win_width)))"
}

win_y_snaps_out_top() {
  echo "$(($(out_edge_top) - $(win_height)))"
}

win_y_snaps_out_bottom() {
  out_edge_bottom
}

# Window manager edge snap actions

win_snaps_top() {
  exec i3-msg -q "move absolute position $(win_x_stays) $(win_y_snaps_top)"
}

win_snaps_bottom() {
  exec i3-msg -q "move absolute position $(win_x_stays) $(win_y_snaps_bottom)"
}

win_snaps_left() {
  exec i3-msg -q "move absolute position $(win_x_snaps_left) $(win_y_stays)"
}

win_snaps_right() {
  exec i3-msg -q "move absolute position $(win_x_snaps_right) $(win_y_stays)"
}

win_snaps_out_top() {
  exec i3-msg -q "move absolute position $(win_x_stays) $(win_y_snaps_out_top)"
}

win_snaps_out_bottom() {
  exec i3-msg -q "move absolute position $(win_x_stays) $(win_y_snaps_out_bottom)"
}

win_snaps_out_left() {
  exec i3-msg -q "move absolute position $(win_x_snaps_out_left) $(win_y_stays)"
}

win_snaps_out_right() {
  exec i3-msg -q "move absolute position $(win_x_snaps_out_right) $(win_y_stays)"
}

# Window moving actions

win_moves_down() {
  exec i3-msg -q "move absolute position $(win_x_stays) $(win_y_moves_down)"
}

win_moves_up() {
  exec i3-msg -q "move absolute position $(win_x_stays) $(win_y_moves_up)"
}

win_moves_left() {
  exec i3-msg -q "move absolute position $(win_x_moves_left) $(win_y_stays)"
}

win_moves_right() {
  exec i3-msg -q "move absolute position $(win_x_moves_right) $(win_y_stays)"
}

if [ "$win_fullscreen_mode" != "0" ]; then
  exec i3-msg -q "fullscreen disable; floating enable"
fi

if [ "$win_type" != "floating_con" ]; then
  exec i3-msg -q "floating enable"
fi

case "$direction" in
  "up")
    if [ "$(win_edge_bottom)" -gt "$(ws_edge_bottom)" ]; then
      win_snaps_bottom
    fi

    if [ "$(win_edge_top)" -le "$(ws_edge_top)" ]; then
      win_snaps_out_top
    fi

    win_snaps_top
  ;;
  "down")
    if [ "$(win_edge_top)" -lt "$(ws_edge_top)" ]; then
      win_snaps_top
    fi

    if [ "$(win_edge_bottom)" -ge "$(ws_edge_bottom)" ]; then
      win_snaps_out_bottom
    fi

    win_snaps_bottom
  ;;
  "left")
    if [ "$(win_edge_right)" -gt "$(ws_edge_right)" ]; then
      win_snaps_right
    fi

    if [ "$(win_edge_left)" -le "$(ws_edge_left)" ]; then
      win_snaps_out_left
    fi

    win_snaps_left
  ;;
  "right")
    if [ "$(win_edge_left)" -lt "$(ws_edge_left)" ]; then
      win_snaps_left
    fi

    if [ "$(win_edge_right)" -ge "$(ws_edge_right)" ]; then
      win_snaps_out_right
    fi

    win_snaps_right
  ;;
  *)
    exit "1"
  ;;
esac

