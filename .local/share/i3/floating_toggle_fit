#!/usr/bin/env sh
set -eu

# TODO
# - try to fit window x and y "geometry" ratio within ws x y boundaries
#   - (geometry - object - The natural geometry of the contents if it were to size itself)
#   - first try without padding?

# Detecting window manager

wm="${WAYLAND_DISPLAY:+"sway"}"
wm="${wm:-"i3"}"

case "$wm" in
  "sway")
    wm_cmd="swaymsg"
  ;;
  "i3")
    wm_cmd="i3-msg"
  ;;
esac

ws="$(
  $wm_cmd -t "get_workspaces" | jq -r \
  ".[] | select(.focused == true) | .rect.x, .rect.y, .rect.width, .rect.height, .output"
)"

# ws_rect_x="$(              echo "$ws" | sed  "1q;d")"
# ws_rect_y="$(              echo "$ws" | sed  "2q;d")"
ws_rect_width="$(          echo "$ws" | sed  "3q;d")" 
ws_rect_height="$(         echo "$ws" | sed  "4q;d")"
# ws_output="$(              echo "$ws" | sed  "5q;d")"

# out_rect="$(
#   $wm_cmd -t "get_outputs"    | jq -r \
#   ".[] | select(.name == \"${ws_output}\").rect | .x, .y, .width, .height"
# )"

# out_rect_x="$(       echo "$out_rect" | sed  "1q;d")"
# out_rect_y="$(       echo "$out_rect" | sed  "2q;d")"
# out_rect_width="$(   echo "$out_rect" | sed  "3q;d")"
# out_rect_height="$(  echo "$out_rect" | sed  "4q;d")"

win="$(
  $wm_cmd -t "get_tree"       | jq -r \
  ".. | select(.type?) | select(.focused == true) | .type, .floating, .fullscreen_mode, .rect.x, .rect.y, .rect.width, .rect.height, .window_rect.x, .window_rect.y, .window_rect.width, .window_rect.height, .deco_rect.x, .deco_rect.y, .deco_rect.width, .deco_rect.height, .geometry.x, .geometry.y, .geometry.width, .geometry.height"
)"

# win_type="$(              echo "$win" | sed  "1q;d")"
# win_floating="$(          echo "$win" | sed  "2q;d")" # i3
# win_fullscreen_mode="$(   echo "$win" | sed  "3q;d")"
# win_rect_x="$(            echo "$win" | sed  "4q;d")"
# win_rect_y="$(            echo "$win" | sed  "5q;d")"
# win_rect_width="$(        echo "$win" | sed  "6q;d")"
# win_rect_height="$(       echo "$win" | sed  "7q;d")"
# win_window_rect_x="$(     echo "$win" | sed  "8q;d")"
# win_window_rect_y="$(     echo "$win" | sed  "9q;d")"
# win_window_rect_width="$( echo "$win" | sed "10q;d")"
# win_window_rect_height="$(echo "$win" | sed "11q;d")"
# win_deco_rect_x="$(       echo "$win" | sed "12q;d")"
# win_deco_rect_y="$(       echo "$win" | sed "13q;d")"
# win_deco_rect_width="$(   echo "$win" | sed "14q;d")"
# win_deco_rect_height="$(  echo "$win" | sed "15q;d")"
# win_geometry_x="$(        echo "$win" | sed "16q;d")"
# win_geometry_y="$(        echo "$win" | sed "17q;d")"
win_geometry_width="$(    echo "$win" | sed "18q;d")"
win_geometry_height="$(   echo "$win" | sed "19q;d")"

win_new_width="$win_geometry_width"
win_new_height="$win_geometry_height"

if [ "$win_new_width" -gt "$ws_rect_width" ]; then
  win_new_height="scale=0; ${win_new_height} / (${win_new_width} / ${ws_rect_width})"
  win_new_width="$ws_rect_width"
fi

if [ "$win_new_height" -gt "$ws_rect_height" ]; then
  win_new_width="scale=0; ${win_new_width} / (${win_new_height} / ${ws_rect_height})"
  win_new_height="$ws_rect_height"
fi

i3-msg -q "floating toggle; resize set width ${win_new_width} height ${win_new_height}; move position center"
