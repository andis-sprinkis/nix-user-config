#!/usr/bin/env sh

lf_send() {
  result="$(lf -remote "send ${id} ${1:-""}")"
  status="$?"

  if [ "$status" != "0" ] || [ "$result" = "listen: send: no such client id is connected" ]; then
    exit
  fi

  echo "$result"
}

lf_send "set user_quittimercallerpid ${$}"

tick="1"
target="${lf_user_quittimersec:-"1800"}"
reset_sig="USR1"

sleeper() {
  elapsed="0"

  trap 'elapsed="$((-tick))"' "$reset_sig"

  while true; do
    while [ "$elapsed" -lt "$target" ]; do
      sleep "$tick" &
      wait "$!"
      elapsed="$((elapsed + tick))"
    done

    # Try to quit.
    # Reset the timer if the lf mode is not 'normal' or the timer has been explicitly unset after on-init.
    lf_send "&if [ \"\$lf_user_quittimer\" = \"1\" ] && [ \"\$lf_user_quittimersec\" ] && [ \"\$lf_user_quittimersec\" -gt \"0\" ] && [ \"\$lf_mode\" = \"normal\" ]; then lf -remote \"send \${id} quit\"; else kill -${reset_sig} \"\${lf_user_quittimerpid}\"; fi"

    # Give client 1s to quit or reset the timer
    sleep "1"

    if [ -z "$(lf_send)" ]; then
      # No stdout for -remote - the client hasn't quit.
      # An active file operation ('quit: copy operation in progress') or client is in non-'normal' mode.
      # Reset the timer.

      elapsed="0"
      continue
    fi

    # Something went wrong.
    exit "5"
  done
}

sleeper &
sleeper_pid="$!"

lf_send "set user_quittimerpid ${!}"

trap 'kill -9 "$sleeper_pid"' INT TERM QUIT

wait "$!"
