#!/usr/bin/env bash
# Tries to execute focused X window program again to spawn a new window of it.
# How:
# 1. Reads WM_CLASS and WM_INSTANCE of the focused X window.
# 2. Executes any known cases, where executable name from window's WM_CLASS is different than the WM_CLASS or the WM_INSTANCE or requires additional parameters. (Update this list as necessary!)
# 3. If that falls through, checks if window's WM_CLASS and WM_INSTANCE are commands in current case or in lower case spelling and, if so, executes the first match.

set -e

{ read wm_class wm_instance ; } < <(xprop -id "$(xprop -root | sed -n 's/_NET_ACTIVE_WINDOW(WINDOW): window id # \(.*.\)$/\1/p')" | sed -n 's/WM_CLASS(STRING) = "\(.*.\)", "\(.*.\)"$/\1 \2/p')

case $wm_class in
  "libreoffice") exec libreoffice "--$(echo "$wm_instance" | sed -n 's/libreoffice-\(.*.\)/\1/p')";;
  "libreoffice-"*) exec libreoffice "--$(echo "$wm_class" | sed -n 's/libreoffice-\(.*.\)/\1/p')";;
  "org.wezfurlong.wezterm") exec wezterm;;
  "mpv") exec mpv --player-operation-mode=pseudo-gui;;
esac

for i in "$wm_class" "$wm_instance"; do
  [ "$(command -v "$i")" ] && exec "$i"
  i_lc="$(echo "$i" | tr '[:upper:]' '[:lower:]')"
  [ "$(command -v "$i_lc")" ] && exec "$i_lc"
done

exit 1
