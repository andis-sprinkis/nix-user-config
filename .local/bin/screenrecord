#!/usr/bin/env sh
set -eu

msg_usage="$(basename "$0") usage: no arguments (same as --area) OR [--all|--output|--window|--area|--stop] OR [--help|-h]"

case "${1:-""}" in
  --help|-h)
    echo "$msg_usage"
    exit
  ;;
esac

path_dir="${HOME}/scr"
path_out="${path_dir}/$(date "+%s").mp4"

i3blocks_signal() {
  if [ "$(pidof "i3blocks")" ]; then
    (
      if [ "${1:-""}" = "wait" ]; then
        sleep "0.5"
      fi

      pkill "-SIGRTMIN+7" "i3blocks"
    ) 1> "/dev/null" 2> "/dev/null" & disown
  fi
}

if [ "${WAYLAND_DISPLAY:-""}" ]; then
  if [ "${1:-""}" = "--stop" ]; then
    set +e
    pkill -SIGINT -f "wf-recorder"
    pkill -SIGINT -f "slurp"
    set -e

    i3blocks_signal "wait"

    exit "0"
  fi

  if [ "$(pidof "wf-recorder")" ] || [ "$(pidof "slurp")" ]; then
    exit "3"
  fi

  record() {
    ptr_coord=""

    case "$1" in
      "area")
        ptr_coord="$(set +e; slurp; set -e)"
      ;;
      "output")
        ptr_coord="$(set +e; slurp -p; set -e)"
      ;;
    esac

    if [ -z "$ptr_coord" ]; then
      exit "0"
    fi

    ptr_coord_x="${ptr_coord%,*}"
    ptr_coord_y="${ptr_coord#*,}"
    ptr_coord_y="${ptr_coord_y% *}"

    output="$(
      swaymsg -rt get_outputs | jq -r \
        ".[] | select((${ptr_coord_x} >= .rect.x) and (${ptr_coord_x} <= .rect.x + .rect.width) and (${ptr_coord_y} >= .rect.y) and (${ptr_coord_y} <= .rect.y + .rect.height))"
    )"

    output_transform="$(echo "$output" | jq -r ".transform")"

    rec_transpose=""

    case "$output_transform" in
      "180")
        rec_transpose="-F transpose=1"
      ;;
      "90")
        rec_transpose="-F transpose=2"
      ;;
    esac

    rec_geometry=""

    case "$1" in
      "area")
        rec_geometry="$ptr_coord"
      ;;
      "output")
        rec_geometry="$(echo "$output" | jq -r \
          "[([.rect.x, .rect.y] | join(\",\")),([.rect.width,.rect.height] | join(\"x\"))] | join(\" \")"
        )"
      ;;
    esac

    i3blocks_signal "wait"

    wf-recorder --audio --codec=libx264rgb "$rec_transpose" --geometry="$rec_geometry" --file="$path_out"

    i3blocks_signal

    printf '%s' "$path_out" | wl-copy

    exit
  }

  case "${1:-""}" in
    --all)
      echo "Not implemented (Wayland): ${1}" 1>&2
      exit "5"
    ;;
    --output)
      record "output"
    ;;
    --window)
      echo "Not implemented (Wayland): ${1}" 1>&2
      exit "5"
    ;;
    ""|--area)
      record "area"
    ;;
    -h|--help)
      echo "$msg_usage"
      exit "0"
    ;;
    *)
      echo "$msg_usage" 1>&2
      exit "1"
    ;;
  esac
fi

if [ "${DISPLAY:-""}" ] && [ -z "${WAYLAND_DISPLAY:-""}" ]; then
  case "${1:-""}" in
    ""|--all|--output|--window|--area|--stop)
      echo "Not implemented (X11): ${1:-""}" 1>&2
      exit "5"
    ;;
    -h|--help)
      echo "$msg_usage"
      exit "0"
    ;;
    *)
      echo "$msg_usage" 1>&2
      exit "1"
    ;;
  esac
fi

case "${1:-""}" in
  -h|--help)
    echo "$msg_usage"
    exit "0"
  ;;
  ""|--all|--output|--window|--area|--stop)
    echo "Must be ran under X11 or Wayland." 1>&2
    exit "2"
  ;;
  *)
    echo "$msg_usage" 1>&2
    exit "1"
  ;;
esac
